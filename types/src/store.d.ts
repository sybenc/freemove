import { DomSelection } from "@utils/d3";
import { Transform } from "@/transform";
import { Observer } from "@/observer";
import { Rect } from "@/rect";
import { Manager } from "@/manager";
import { Ruler } from "@sybenc/ruler";
import { Hook } from "@/hook";
import { Plugins } from "@/plugins";
import { store_search_error } from "@/store_search_error";
import { store_apply_transform } from "@/store_apply_transform";
import { store_plugin } from "@/store_plugin";
import { store_mount } from "@/store_mount";
import { hook_on_transform } from "@/hook/hook_on_transform";
import { hook_on_mount_start } from "@/hook/hook_on_mount_start";
import { hook_on_move_rect } from "@/hook/hook_on_move_rect";
import { hook_on_mount_end } from "@/hook/hook_on_mount_end";
import { hook_on_move_rect_end } from "@/hook/hook_on_move_rect_end";
import { hook_on_move_rect_start } from "@/hook/hook_on_move_rect_start";
import { hook_on_selected } from "@/hook/hook_on_selected";
import { hook_on_drop } from "@/hook/hook_on_drop";
import { hook_on_drag_over } from "@/hook/hook_on_drag_over";
import { hook_on_drag_leave } from "@/hook/hook_on_drag_leave";
import { Align } from "@sybenc/assist-align/dist/align/align";
import { store_plugin_data } from "@/store_plugin_data";
export declare const hook: unique symbol;
export declare const plugins: unique symbol;
export declare class Store {
    #private;
    [key: string]: any;
    root: DomSelection;
    board: DomSelection;
    assist: DomSelection;
    transform: Transform;
    observer: Observer;
    rect: Rect;
    manager: Manager;
    ruler: Ruler;
    align: Align;
    get selectedRect(): Rect;
    set selectedRect(rect: Rect);
    [hook]: Hook;
    [plugins]: Plugins;
    searchError: typeof store_search_error;
    applyTransform: typeof store_apply_transform;
    plugin: typeof store_plugin;
    pluginData: typeof store_plugin_data;
    mount: typeof store_mount;
    onTransform: typeof hook_on_transform;
    onMountStart: typeof hook_on_mount_start;
    onMountEnd: typeof hook_on_mount_end;
    onMoveRect: typeof hook_on_move_rect;
    onMoveRectEnd: typeof hook_on_move_rect_end;
    onMoveRectStart: typeof hook_on_move_rect_start;
    onSelected: typeof hook_on_selected;
    onDrop: typeof hook_on_drop;
    onDragOver: typeof hook_on_drag_over;
    onDragLeave: typeof hook_on_drag_leave;
    constructor(root: HTMLElement, board: HTMLElement);
}
